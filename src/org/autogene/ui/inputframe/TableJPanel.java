package org.autogene.ui.inputframe;



import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import org.autogene.core.bio.entities.Annotation;
import org.autogene.core.bio.entities.Feature;
import org.autogene.core.bio.entities.FeatureType;
import org.autogene.core.bio.managers.FeatureTypeManager;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Emily
 */
public class TableJPanel extends javax.swing.JPanel {

    /**
     * Creates new form TableJPanel
     */
    
    private DefaultTableModel model;
    
    public TableJPanel() {
        
        initComponents();
        
        FeatureTypeManager manager = new FeatureTypeManager();
        List<FeatureType> features = manager.findAll();
        
        
        ArrayList<Object[]> values = new ArrayList<Object[]>();
       
            
        Object[] tempF;
            
   /*     for(FeatureType f: features)
        {
            tempF = new Object[2];

            tempF[0] = new Boolean(true);
            tempF[1] = f.getSofa_name();   
            values.add(tempF);
        }
    */
        //quick replacement to the above for loop
        Object[] tempFeature = new Object[2];
            tempFeature[0] = new Boolean(true);
            tempFeature[1] = "Feature";
            values.add(tempFeature);
        Object[] tempGene = new Object[2];
            tempGene[0] = new Boolean(true);
            tempGene[1] = "Gene";
            values.add(tempGene);
        Object[] tempPromoter = new Object[2];
            tempPromoter[0] = new Boolean(true);
            tempPromoter[1] = "Promoter";
            values.add(tempPromoter);
        Object[] tempPrimer = new Object[2];
            tempPrimer[0] = new Boolean(true);
            tempPrimer[1] = "Primer";
            values.add(tempPrimer); 
        Object[] tempRestrictEnzym = new Object[2];
            tempRestrictEnzym[0] = new Boolean(true);
            tempRestrictEnzym[1] = "Restriction Enzyme";
            values.add(tempRestrictEnzym);
        Object[] tempOrigin = new Object[2];
            tempOrigin[0] = new Boolean(true);
            tempOrigin[1] = "Origin";
            values.add(tempOrigin);     
        Object[] tempRegulatory = new Object[2];
            tempRegulatory[0] = new Boolean(true);
            tempRegulatory[1] = "Regulatory";
            values.add(tempRegulatory);
        Object[] tempTerminator = new Object[2];
            tempTerminator[0] = new Boolean(true);
            tempTerminator[1] = "Terminator";
            values.add(tempTerminator);
            
        Object[][] finalValues = new Object[values.size()][2];
        
        int i = 0;
        for(Object[] l: values)
        {
            
            finalValues[i] = l;
            i++;
        }

        model = new DefaultTableModel(
            finalValues,
            new String [] {
                "Search", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
     
                return canEdit [columnIndex];
            }
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
 

        };
        

        jTable1.setModel(model);

   
    }
    
    public ArrayList<String> getFeatureTypes()
    {
        
        ArrayList<String> featureTypes = new ArrayList<String>();
        
        
        for(int i = 0; i< jTable1.getRowCount(); i++)
            if((Boolean)jTable1.getValueAt(i, 0))
                featureTypes.add((String)jTable1.getValueAt(i, 1));

        
        
        return featureTypes;          
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
