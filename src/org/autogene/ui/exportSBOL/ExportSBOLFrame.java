/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.autogene.ui.exportSBOL;

import java.io.File;
import javax.swing.JFileChooser;
import org.autogene.core.bio.entities.Plasmid;
import org.autogene.ui.cgview.LogEventType;
import org.autogene.ui.frames.BaseInternalFrame;
import org.autogene.ui.loggerframe.Log;

/**
 *
 * @author georgechen
 */
public class ExportSBOLFrame extends BaseInternalFrame {

    /**
     * Creates new form ExportSBOLFrame
     */
        private ExportSBOL exportSBOL;
    private File exportFile;
    public ExportSBOLFrame() {
        
    }
    
    public ExportSBOLFrame(ExportSBOL esbol) {
        initComponents();
      this.exportSBOL = esbol;

        try {
            Plasmid plasmid = environment.getActivePlasmid();
            exportFile = new File(plasmid.getName() + ".xml");
            jFileChooser1.setSelectedFile(exportFile);
        }
        catch(NullPointerException e) {
            System.out.println("Could not find plasmid");
        }
        int result = jFileChooser1.showSaveDialog(this);
        if(result == JFileChooser.APPROVE_OPTION) {
            exportFile = jFileChooser1.getSelectedFile();
            exportFile = addExtension(exportFile);
            Log.addText("Exporting: " + exportFile.getName(), LogEventType.NEUTRAL);
            System.out.println(exportFile.getAbsolutePath());
            try {
                Plasmid plasmid = environment.getActivePlasmid();
                ExportSBOL.export(plasmid, exportFile);
                Log.addText("Export Successful! Exported to " + exportFile.getAbsolutePath(),LogEventType.SUCCESS);
            }
            catch(NullPointerException e) {
                Log.addText("Could not find plasmid", LogEventType.FAILURE);
            }
        }   
       
    }
                    

private File addExtension(File exportFile) {
    String filePath = exportFile.getAbsolutePath();
    File newExportFile;
    int ind = filePath.indexOf(".");
    if(ind == -1) {
        filePath = filePath + ".xml";
        newExportFile = new File(filePath);
    }
    else {
        newExportFile = exportFile;
    }
    return newExportFile;
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jFileChooser1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 285, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jFileChooser1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 235, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExportSBOLFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExportSBOLFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExportSBOLFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExportSBOLFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ExportSBOLFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables
}
